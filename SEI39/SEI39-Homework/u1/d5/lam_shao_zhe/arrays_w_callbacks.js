const nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0];

const panagram = [
  "The",
  "quick",
  "brown",
  "fox",
  "jumps",
  "over",
  "the",
  "lazy",
  "dog",
];

//Every
const determineGreaterEqual0 = (num) => num >= 0;
console.log(nums.every(determineGreaterEqual0));
const wordShorterThan8 = (word) => word.length < 8;
console.log(panagram.every(wordShorterThan8));

//Filter
const filterNumberLessThan4 = (num) => num < 4;
console.log(nums.filter(filterNumberLessThan4));
const filterEvenLength = (word) => word.length % 2 === 0;
console.log(panagram.filter(filterEvenLength));

//Find
const findDivisibleBy5 = (num) => num % 5 === 0;
console.log(nums.find(findDivisibleBy5));
const findWordLongerThan5 = (word) => word.length > 5;
console.log(panagram.find(findWordLongerThan5));

//Find Index
const indexDivisibleBy3 = (num) => num % 3 === 0;
console.log(nums.findIndex(indexDivisibleBy3));
const wordLessThan2 = (word) => word.length < 2;
console.log(panagram.findIndex(wordLessThan2));

//For Each
const multiplyBy3 = (num) => console.log(num * 3);
nums.forEach(multiplyBy3);
const addExclamation = (word) => console.log(word + "!");
panagram.forEach(addExclamation);

//Map
const multiplyBy100 = (num) => (num *= 100);
const arr1 = nums.map(multiplyBy100);
console.log(arr1);
const makeUpper = (word) => {
  return word.toUpperCase();
};
const arr2 = panagram.map(makeUpper);
console.log(arr2);
console.log(nums, panagram);
//The original array is unchanged
//yes it can be saved in another array through assigning the new array to the ouput generated by map

//Some
const divisibleBy7 = (num) => num % 7 === 0;
console.log(nums.some(divisibleBy7));
const hasLetterA = (word) => word.split("").indexOf("a") > -1;
console.log(panagram.some(hasLetterA));

//Hungry for More
//Reduce
const addition = (total, num) => total + num;
console.log(nums.reduce(addition));
console.log(panagram.reduce(addition));
console.log(panagram); //the original array is unchanged.

//Sort
console.log(nums.sort()); //expected return is numbers sort by ASCII
console.log(panagram.sort()); //the expected return is an array with elements sorted alphabetically.

nums.sort(function (a, b) {
  return a - b;
});
console.log(nums);

nums.sort(function (a, b) {
  return b - a;
});
console.log(nums);

panagram.sort(function (a, b) {
  return a - b;
});
console.log(panagram);

panagram.sort(function (a, b) {
  return b - a;
});
console.log(panagram);

//the array is altered after sort is invoked.
